/**
 * This file was generated by the Jeddict
 */
package awt.server.model;

import java.util.List;
import javax.persistence.Basic;
import javax.persistence.DiscriminatorColumn;
import javax.persistence.DiscriminatorValue;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import static javax.persistence.InheritanceType.SINGLE_TABLE;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Transient;

/**
 * @author Utente
 */
@Entity
//@Inheritance(strategy=SINGLE_TABLE)
//@DiscriminatorColumn(name = "TYPE")
//@DiscriminatorValue("abstract")
//@MappedSuperclass

public class Task {

    @Transient
    public final static String OPENED = "opened", CLOSED = "closed", FINISHED = "finished";
    
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private Long id;

    @Basic
    private String workingSession;//closed, open, FINISHED (closed = puoi aprirlo, finished = basta immagini)

    @Basic
    private String type;
    public static final String SELECTION = "selection", ANNOTATION = "annotation";
    @Basic
    private Long currentTaskInstance;

    public Long getCurrentTaskInstance() {
        return currentTaskInstance;
    }

    public void setCurrentTaskInstance(Long currentTaskInstance) {
        this.currentTaskInstance = currentTaskInstance;
    }

    @ManyToOne(targetEntity = Worker.class)
    private Worker worker;

    @ManyToOne(targetEntity = Campaign.class)
    private Campaign campaign;
    
      @OneToMany(targetEntity = AnnotationTaskInstance.class, mappedBy = "annotationTask")
    private List<AnnotationTaskInstance> annotationTaskInstance;
      
      @OneToMany(targetEntity = SelectionTaskInstance.class, mappedBy = "selectionTask")
    private List<SelectionTaskInstance> selectionTaskInstances;

    public List<SelectionTaskInstance> getSelectionTaskInstances() {
        return selectionTaskInstances;
    }

    public void setSelectionTaskInstances(List<SelectionTaskInstance> selectionTaskInstances) {
        this.selectionTaskInstances = selectionTaskInstances;
    }

    public List<AnnotationTaskInstance> getAnnotationTaskInstances() {
        return this.annotationTaskInstance;
    }

    public void setAnnotationTaskInstances(List<AnnotationTaskInstance> ANNOTATION_TASK_INSTANCEs) {
        this.annotationTaskInstance = ANNOTATION_TASK_INSTANCEs;
    }

    public Task(Long id, String workingSession, Worker worker, Campaign campaign, String type) {
        this.id = id;
        this.workingSession = workingSession;
        this.worker = worker;
        this.campaign = campaign;
        this.type = type;
    }

    public Task() {
    }

     public Task(String workingSession, Worker worker, Campaign campaign, String type) {
        this.workingSession = workingSession;
        this.worker = worker;
        this.campaign = campaign;
        this.type = type;
    }
    
    
    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getWorkingSession() {
        return workingSession;
    }

    public void setWorkingSession(String workingSession) {
        this.workingSession = workingSession;
    }

    public Worker getWorker() {
        return worker;
    }

    public void setWorker(Worker worker) {
        this.worker = worker;
    }

    public Campaign getCampaign() {
        return campaign;
    }

    public void setCampaign(Campaign campaign) {
        this.campaign = campaign;
    }

    public String getType() {
        return type;
    }

    public void setType(String type) {
        this.type = type;
    }

    public List<AnnotationTaskInstance> getAnnotationTaskInstance() {
        return annotationTaskInstance;
    }

    public void setAnnotationTaskInstance(List<AnnotationTaskInstance> annotationTaskInstance) {
        this.annotationTaskInstance = annotationTaskInstance;
    }

   

}